"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const m=require("./index-CSvnpArE.cjs"),i=require("react/jsx-runtime"),j=require("react"),D=require("./ActionButton-DY0olRIe.cjs"),u=require("./tooltip-BSrYL2Rz.cjs"),h=require("./popover-C53Gavq8.cjs"),b=require("./Icon-R3ihBJhB.cjs"),v=require("./toggle-B1L5JRmu.cjs");function y(t){var r;const n=j.useMemo(()=>{var c;const e=(c=t==null?void 0:t.items)==null?void 0:c.find(o=>o.isActive());return e&&!e.default?{...e,icon:e.icon?e.icon:t.icon}:{title:t==null?void 0:t.tooltip,icon:t.icon,isActive:()=>!1}},[t]);return i.jsxs(h.Popover,{modal:!0,children:[i.jsx(h.PopoverTrigger,{asChild:!0,disabled:t==null?void 0:t.disabled,children:i.jsx(D.ActionButton,{customClass:"!richtext-w-12 richtext-h-12",disabled:t==null?void 0:t.disabled,icon:t==null?void 0:t.icon,tooltip:t==null?void 0:t.tooltip,children:i.jsx(b.IconComponent,{className:"richtext-ml-1 richtext-size-3 richtext-text-zinc-500",name:"MenuDown"})})}),i.jsx(h.PopoverContent,{align:"start",className:"richtext-flex richtext-w-full richtext-min-w-4 richtext-flex-row richtext-gap-1 !richtext-p-[4px]",side:"bottom",children:(r=t==null?void 0:t.items)==null?void 0:r.map((e,l)=>{var c,o;return i.jsxs(u.Tooltip,{children:[i.jsx(u.TooltipTrigger,{asChild:!0,children:i.jsx(v.Toggle,{className:"richtext-size-7 richtext-p-1","data-state":n.title===e.title?"on":"off",onClick:e==null?void 0:e.action,pressed:n.title===e.title,size:"sm",children:(e==null?void 0:e.icon)&&i.jsx(b.IconComponent,{name:e.icon})})}),i.jsxs(u.TooltipContent,{className:"richtext-flex richtext-flex-col richtext-items-center",children:[i.jsx("span",{children:e.title}),!!((c=e.shortcutKeys)!=null&&c.length)&&i.jsx("span",{children:(o=e.shortcutKeys)==null?void 0:o.map(x=>u.getShortcutKey(x)).join(" ")})]})]},`text-align-${l}`)})})]})}const C=m.Extension.create({name:"text-direction",addOptions(){var t;return{...(t=this.parent)==null?void 0:t.call(this),types:["heading","paragraph"],directions:["auto","ltr","rtl"],defaultDirection:"auto",button({editor:n,extension:r,t:e}){var f;const l=((f=r.options)==null?void 0:f.directions)||[],c={auto:"TextDirection",ltr:"LeftToRight",rtl:"RightToLeft"},o=l.map(s=>({title:e(`editor.textDirection.${s}.tooltip`),icon:c[s],isActive:()=>!1,action:()=>{var a,g,d,T;if(s==="auto"){(g=(a=n.commands)==null?void 0:a.unsetTextDirection)==null||g.call(a);return}(T=(d=n.commands)==null?void 0:d.setTextDirection)==null||T.call(d,s)},disabled:!1})),x=o.filter(s=>s.disabled).length===o.length;return{component:y,componentProps:{icon:"TextDirection",tooltip:e("editor.textDirection.tooltip"),disabled:x,items:o}}}}},addGlobalAttributes(){return[{types:this.options.types,attributes:{dir:{default:this.options.defaultDirection,parseHTML:t=>t.attributes.dir&&this.options.directions.includes(t.attributes.dir)?t.attributes.dir.value:this.options.defaultDirection,renderHTML:t=>({dir:t.dir})}}}]},addCommands(){return{setTextDirection:t=>({commands:n})=>this.options.directions.includes(t)?this.options.types.every(r=>n.updateAttributes(r,{dir:t})):!1,unsetTextDirection:()=>({commands:t})=>this.options.types.every(n=>t.resetAttributes(n,"dir"))}}});exports.TextDirection=C;
