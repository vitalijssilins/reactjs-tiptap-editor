"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const t=require("./index-CSvnpArE.cjs"),r=require("./RichTextEditor-CiHu3qws.cjs"),d=/(^|[^`])`([^`]+)`(?!`)/,s=/(^|[^`])`([^`]+)`(?!`)/g,i=t.Mark.create({name:"code",addOptions(){return{HTMLAttributes:{}}},excludes:"_",code:!0,exitable:!0,parseHTML(){return[{tag:"code"}]},renderHTML({HTMLAttributes:e}){return["code",t.mergeAttributes(this.options.HTMLAttributes,e),0]},addCommands(){return{setCode:()=>({commands:e})=>e.setMark(this.name),toggleCode:()=>({commands:e})=>e.toggleMark(this.name),unsetCode:()=>({commands:e})=>e.unsetMark(this.name)}},addKeyboardShortcuts(){return{"Mod-e":()=>this.editor.commands.toggleCode()}},addInputRules(){return[t.markInputRule({find:d,type:this.type})]},addPasteRules(){return[t.markPasteRule({find:s,type:this.type})]}}),u=i.extend({addOptions(){var e;return{...(e=this.parent)==null?void 0:e.call(this),button:({editor:o,t:n})=>({component:r.ActionButton,componentProps:{action:()=>o.commands.toggleCode(),isActive:()=>o.isActive("code")||!1,disabled:!o.can().toggleCode(),icon:"Code",shortcutKeys:["mod","E"],tooltip:n("editor.code.tooltip")}})}}});exports.Code=u;
